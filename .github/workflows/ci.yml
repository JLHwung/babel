name: CI

on: [push, pull_request]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare-yarn-cache:
    name: Prepare Cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "yarn"
      - name: 'Check or update Yarn cache (fix w/ "yarn install")'
        env:
          YARN_ENABLE_SCRIPTS: false # disable post-install scripts
          YARN_NODE_LINKER: pnp # use pnp linker for better linking performance: it's meant to update yarn cache only
        run: |
          yarn install --mode=skip-build

  yarn-validate:
    name: Validate Yarn dependencies and constraints
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "yarn"
      - name: 'Check for unmet constraints (fix w/ "yarn constraints --fix")'
        run: |
          yarn constraints
      - name: 'Check for duplicate dependencies (fix w/ "yarn dedupe")'
        run: |
          yarn dedupe --check
      - name: Check for dependency cycles
        run: |
          yarn release-tool check-cycles

  test-coverage:
    name: Test on Node.js Latest
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "yarn"
      - name: Generate coverage report
        run: |
          make -j test-ci-coverage
          yarn test:esm
      - name: Upload coverage report
        uses: codecov/codecov-action@v1

  test-esm:
    name: Test ESM version
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "yarn"
      - name: Use ESM and build
        run: make use-esm
        env:
          USE_ESM: true
      - name: Test
        # Hack: --color has supports-color@5 returned true for GitHub CI
        # Remove once `chalk` is bumped to 4.0.
        run: yarn jest --ci --color
        env:
          BABEL_ENV: test
          USE_ESM: true

  build:
    name: Build Babel Artifacts
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    # Yarn PnP does not support native ESM yet (https://github.com/yarnpkg/berry/issues/638)
    # env:
    #    YARN_NODE_LINKER: pnp # use pnp linker for better linking performance and stricter checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "yarn"
      - name: Build babel artifacts
        run: |
          BABEL_ENV=test-legacy make -j build-standalone-ci
        env:
          BABEL_8_BREAKING: false
          STRIP_BABEL_8_FLAG: true
      - name: Build Makefile.js
        run: |
          node ./scripts/pack-script.js
      - name: Ensure cwd does not contain uncommitted changes
        run: |
          node ./scripts/assert-dir-git-clean.js
      - uses: actions/upload-artifact@v3
        with:
          name: babel-artifact
          path: |
            codemods/*/lib/**/*
            eslint/*/lib/**/*
            packages/*/lib/**/*
            packages/babel-standalone/*.js
            !**/node_modules/**

  build-windows:
    name: Build Babel Artifacts On Windows
    runs-on: windows-latest
    # Yarn PnP does not support native ESM yet (https://github.com/yarnpkg/berry/issues/638)
    # env:
    #    YARN_NODE_LINKER: pnp # use pnp linker for better linking performance and stricter checks
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "yarn"
      - name: Build babel artifacts
        shell: bash
        run: |
          BABEL_ENV=test-legacy make -j build-standalone-ci
        env:
          BABEL_8_BREAKING: false
          STRIP_BABEL_8_FLAG: true
      - name: Ensure cwd does not contain uncommitted changes
        run: |
          node ./scripts/assert-dir-git-clean.js

  lint:
    name: Lint
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js latest
        uses: actions/setup-node@v3
        with:
          node-version: "*"
          cache: "yarn"
      - name: Install
        run: yarn install
      - uses: actions/download-artifact@v3
        with:
          name: babel-artifact
      - name: Lint
        run: make -j tscheck lint-ci

  test-babel-8-breaking:
    name: Test Babel 8 breaking changes
    needs: prepare-yarn-cache
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 14.17
        uses: actions/setup-node@v3
        with:
          node-version: "14.17" # Node.js 14.17 is the first LTS supported by Babel 8
          cache: "yarn"
      - name: Install and build
        run: make -j bootstrap
        env:
          BABEL_ENV: test
          BABEL_8_BREAKING: true
          STRIP_BABEL_8_FLAG: true
      - name: Test jest-diff
        run: node ./test.js
        env:
          BABEL_ENV: test
          BABEL_8_BREAKING: true
          BABEL_TYPES_8_BREAKING: true
      - name: Test
        # Hack: --color has supports-color@5 returned true for GitHub CI
        # Remove once `chalk` is bumped to 4.0.
        run: |
          yarn jest --ci --color
          yarn test:esm
        env:
          BABEL_ENV: test
          BABEL_8_BREAKING: true
          BABEL_TYPES_8_BREAKING: true
